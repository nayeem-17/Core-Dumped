DROP TABLE PROFILE;
CREATE TABLE PROFILE (
    ID NUMBER generated BY DEFAULT AS identity,
    USERNAME VARCHAR2 (64) NOT NULL UNIQUE,
    FIRST_NAME VARCHAR2 (64) NOT NULL,
    LAST_NAME VARCHAR2 (64) NOT NULL,
    PASSWORD VARCHAR2 (128) NOT NULL,
    BIRTHDATE DATE,
    EMAIL VARCHAR2 (128),
    PROFILE_PICTURE varchar2(512),
    TITLE varchar2(128),
    DESCRIPTION varchar2(512),
    LAST_ACTIVE timestamp default current_timestamp,
    CREATED_AT timestamp default current_timestamp,
    REPUTATION NUMBER DEFAULT 0,
    CONSTRAINT PROFILE_PK primary key (id)
);
DROP TABLE TAG;
CREATE TABLE TAG (
  ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
  TITLE VARCHAR2(64) NOT NULL UNIQUE,
  DESCRIPTION VARCHAR2(500),
  CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  SYNONYMS varchar2(256),
  CONSTRAINT TAG_PK PRIMARY KEY (ID)
);
DROP TABLE RESOURCES;
CREATE TABLE resources (
  ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
  TYPE VARCHAR2(64) NOT NULL,
  URL VARCHAR2(128) NOT NULL,
  CONSTRAINT RESOURCES_PK PRIMARY KEY (id)
);
DROP TABLE BADGE;
CREATE TABLE badge (
  id NUMBER generated BY DEFAULT AS identity,
  title VARCHAR2 (64),
  CONSTRAINT BADGE_PK primary key (id)
);

DROP TABLE FOLLOW ;
CREATE TABLE FOLLOW (
  FOLLOWER NUMBER NOT NULL,
  FOLLOWING NUMBER NOT NULL,
  CONSTRAINT FOLLOW_PK PRIMARY KEY (FOLLOWER,FOLLOWING),
  CONSTRAINT FOLLOWER_FK FOREIGN KEY ( FOLLOWER ) REFERENCES PROFILE(ID) ON DELETE CASCADE,
  CONSTRAINT FOLLOWING_FK FOREIGN KEY ( FOLLOWING ) REFERENCES PROFILE(ID) ON DELETE CASCADE,
  CONSTRAINT FOLLOW_SELF CHECK ( FOLLOWER <> FOLLOWING)
);
DROP TABLE PROFILE_INTERESTED_IN;
CREATE TABLE PROFILE_INTERESTED_IN (
  PROFILE_ID NUMBER NOT NULL,
  TAG_ID NUMBER NOT NULL,
  CONSTRAINT PROFILE_INTERESTED_IN_PK PRIMARY KEY(PROFILE_ID,TAG_ID),
  CONSTRAINT PROFILE_INTERESTED_IN_FK FOREIGN KEY (TAG_ID) REFERENCES TAG(ID) ON DELETE CASCADE,
  CONSTRAINT PROFILE_INTERESTED_IN_FK1 FOREIGN KEY (PROFILE_ID) REFERENCES PROFILE(ID) ON DELETE CASCADE
);

DROP TABLE PLANNING;
CREATE TABLE planning(
  id NUMBER GENERATED BY DEFAULT AS IDENTITY,
  title VARCHAR2(128) NOT NULL,
  amount NUMBER DEFAULT 0,
  CONSTRAINT PLANNING_PK primary key (id)
);

DROP TABLE ORGANIZATION;
CREATE TABLE organization (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY,
  name VARCHAR2 (128) NOT NULL,
  address VARCHAR2 (256),
  plan int,
  duration int DEFAULT 0,
  isactive CHAR (1) DEFAULT 'n',
  CONSTRAINT ORGANIZATION_PK primary key (id),
  constraint organization_fk foreign key (plan) references planning (id) ON DELETE CASCADE
);

DROP TABLE USER_ORGANIZATION_RELATIONSHIP;
CREATE TABLE user_organization_relationship (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY,
  organization_id NUMBER,
  username VARCHAR2 (64),
  badge_id NUMBER,
  CONSTRAINT USER_ORG_PK primary key (id),
  constraint user_org_fk foreign key (organization_id) references organization (id),
  constraint user_org_fk_1 foreign key (username) references profile (username) ON DELETE CASCADE ,
  constraint user_org_fk_2 foreign key (badge_id) references badge (id) ON DELETE CASCADE
);

DROP TABLE QUESTION;
CREATE TABLE QUESTION (
  id NUMBER generated BY DEFAULT AS identity,
  title VARCHAR2 (1024) NOT NULL,
  content CLOB NOT NULL,
  contributed_by NUMBER,
  organization_id NUMBER,
  VIEWS NUMBER,
  CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT QUESTION_PK primary key (id),
  CONSTRAINT question_fk FOREIGN KEY (contributed_by) REFERENCES profile (id) ON DELETE CASCADE,
  CONSTRAINT question_fk_1 FOREIGN KEY (organization_id) REFERENCES organization (id) ON DELETE CASCADE
);

DROP TABLE ANSWER;
CREATE TABLE answer (
  id NUMBER generated BY DEFAULT AS identity,
  answer CLOB NOT NULL,
  contributed_by NUMBER,
  question_id NUMBER,
  CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT ANSWER_PK primary key (id),
  CONSTRAINT answer_fk FOREIGN KEY (contributed_by) REFERENCES profile (id) ON DELETE CASCADE,
  CONSTRAINT answer_fk_1 FOREIGN KEY (question_id) REFERENCES question (id) ON DELETE CASCADE 
);

DROP TABLE ARTICLE;
CREATE TABLE article (
  id NUMBER generated BY DEFAULT AS identity,
  title VARCHAR2 (1024) NOT NULL,
  content CLOB NOT NULL,
  contributed_by NUMBER,
  VIEWS number default 0,
  CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT ARTICLE_PK primary key (id),
  CONSTRAINT article_fk FOREIGN KEY (contributed_by) REFERENCES profile (id) ON DELETE CASCADE
);

DROP TABLE COMMENTS;
CREATE TABLE comments (
  id NUMBER generated BY DEFAULT AS identity,
  text VARCHAR2 (1024) NOT NULL,
  contributed_by NUMBER,
  CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT COMMENTS_PK primary key (id),
  CONSTRAINT comments_fk FOREIGN KEY (contributed_by) REFERENCES profile (id) ON DELETE CASCADE 
);

DROP TABLE ANSWER_COMMENT;
CREATE TABLE answer_comment (
  answer_id NUMBER,
  comment_id NUMBER,
  CONSTRAINT ANSWER_COMMENT_PK PRIMARY KEY (ANSWER_ID,COMMENT_ID),
  CONSTRAINT answer_comment_fk FOREIGN KEY (answer_id) REFERENCES answer (id) ON DELETE CASCADE,
  CONSTRAINT answer_comment_fk_1 FOREIGN KEY (comment_id) REFERENCES comments (id) ON DELETE CASCADE
);

DROP TABLE QUESTION_COMMENT;
CREATE TABLE question_comment (
  question_id NUMBER,
  comment_id NUMBER,
  CONSTRAINT QUESTION_COMMENT_PK PRIMARY KEY (QUESTION_ID,COMMENT_ID),
  CONSTRAINT question_comment_fk FOREIGN KEY (question_id) REFERENCES question (id) ON DELETE CASCADE,
  CONSTRAINT question_comment_fk_1 FOREIGN KEY (comment_id) REFERENCES comments (id) ON DELETE CASCADE
);

DROP TABLE ARTICLE_COMMENT;
CREATE TABLE article_comment (
  article_id NUMBER,
  comment_id NUMBER,
  CONSTRAINT ARTICLE_COMMENT_PK PRIMARY KEY (ARTICLE_ID,COMMENT_ID),
  CONSTRAINT article_comment_fk FOREIGN KEY (article_id) REFERENCES article (id) ON DELETE CASCADE,
  CONSTRAINT article_comment_fk_1 FOREIGN KEY (comment_id) REFERENCES comments (id) ON DELETE CASCADE
);

DROP TABLE ARTICLE_TAG;
CREATE TABLE ARTICLE_TAG (
  ARTICLE_ID NUMBER NOT NULL,
  TAG_ID NUMBER NOT NULL,
  CONSTRAINT ARTICLE_TAG_PK PRIMARY KEY(TAG_ID,ARTICLE_ID),
  CONSTRAINT ARTICLE_TAG_FK FOREIGN KEY (ARTICLE_ID) REFERENCES ARTICLE(ID) ON DELETE CASCADE,
  CONSTRAINT ARTICLE_TAG_FK_1 FOREIGN KEY (TAG_ID) REFERENCES TAG (ID) ON DELETE CASCADE
);

DROP TABLE QUESTION_TAG;
CREATE TABLE question_tag (
  QUESTION_ID NUMBER,
  TAG_ID NUMBER,
  CONSTRAINT QUESTION_TAG_PK PRIMARY KEY (TAG_ID,QUESTION_ID),
  CONSTRAINT question_tag_fk FOREIGN KEY (question_id) REFERENCES question (id) ON DELETE CASCADE,
  CONSTRAINT question_tag_fk_1 FOREIGN KEY (tag_id) REFERENCES tag (id) ON DELETE CASCADE
);

DROP TABLE QUESTION_REACT;
CREATE TABLE question_react (
  question_id NUMBER,
  reacted_by NUMBER,
  react CHAR (1),
  CONSTRAINT QUESTION_REACT_PK PRIMARY KEY (QUESTION_ID,REACTED_BY),
  CONSTRAINT question_react_fk FOREIGN KEY (question_id) REFERENCES question (id) ON DELETE CASCADE,
  CONSTRAINT question_react_fk_1 FOREIGN KEY (reacted_by) REFERENCES profile (id) ON DELETE CASCADE
);

DROP TABLE ANSWER_REACT;
CREATE TABLE answer_react (
  answer_id NUMBER,
  reacted_by NUMBER,
  react CHAR (1),
  CONSTRAINT ANSWER_REACT_PK primary key(ANSWER_ID,REACTED_BY),
  CONSTRAINT answer_react_fk FOREIGN KEY (answer_id) REFERENCES answer (id) ON DELETE CASCADE,
  CONSTRAINT answer_react_fk_1 FOREIGN KEY (reacted_by) REFERENCES profile (id) ON DELETE CASCADE
);

DROP TABLE ARTICLE_REACT ;
CREATE TABLE ARTICLE_REACT (
  ARTICLE_ID NUMBER,
  REACTED_BY NUMBER,
  REACT CHAR (1),
  CONSTRAINT ARTICLE_REACT_PK PRIMARY KEY (ARTICLE_ID,REACTED_BY),
  CONSTRAINT article_react_fk FOREIGN KEY (article_id) REFERENCES article (id) ON DELETE CASCADE,
  CONSTRAINT article_react_fk_1 FOREIGN KEY (reacted_by) REFERENCES profile (id) ON DELETE CASCADE
);
DROP TABLE NOTIFICATION;
CREATE TABLE NOTIFICATION(
    ID NUMBER generated BY DEFAULT AS identity,
    PROFILE_ID NUMBER NOT NULL,
    LINK VARCHAR2(100) NOT NULL,
    MESSAGE VARCHAR2(512) NOT NULL,
    IS_READ NUMBER(1) DEFAULT 0,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_NOTIFICATION PRIMARY KEY (ID),
    CONSTRAINT FK_NOTIFICATION FOREIGN KEY(PROFILE_ID) REFERENCES PROFILE(ID) ON DELETE CASCADE
);

CREATE TABLE MESSAGES (
    ID NUMBER generated BY DEFAULT AS identity,
    SENDER_ID NUMBER NOT NULL,
    RECEIVER_ID NUMBER NOT NULL,
    MESSAGE VARCHAR2(512) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pK_MESSAGES PRIMARY KEY (ID),
    CONSTRAINT FK_MESSAGES FOREIGN KEY(SENDER_ID) REFERENCES PROFILE(ID) ON DELETE CASCADE,
    CONSTRAINT FK_MESSAGES_1 FOREIGN KEY(RECEIVER_ID) REFERENCES PROFILE(ID) ON DELETE CASCADE
);
