/*

 %          ALMOST FUCKED UP THE TOTAL DATABASE %





 
 Navicat Premium Data Transfer

 Source Server         : tommy.orcl_remote
 Source Server Type    : Oracle
 Source Server Version : 120200
 Source Host           : 103.94.135.201:1521
 Source Schema         : TOMMY

 Target Server Type    : Oracle
 Target Server Version : 120200
 File Encoding         : 65001

 Date: 19/02/2022 11:21:44
*/


-- ----------------------------
-- Table structure for ANSWER
-- ----------------------------
DROP TABLE "TOMMY"."ANSWER";
CREATE TABLE "TOMMY"."ANSWER" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_77884".nextval NOT NULL,
  "ANSWER" VARCHAR2(2000 BYTE) VISIBLE NOT NULL,
  "CONTRIBUTED_BY" NUMBER VISIBLE,
  "QUESTION_ID" NUMBER VISIBLE,
  "CREATED_AT" TIMESTAMP(6) VISIBLE DEFAULT CURRENT_TIMESTAMP,
  "UPDATED_AT" TIMESTAMP(6) VISIBLE DEFAULT CURRENT_TIMESTAMP
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for ANSWER_COMMENT
-- ----------------------------
DROP TABLE "TOMMY"."ANSWER_COMMENT";
CREATE TABLE "TOMMY"."ANSWER_COMMENT" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_88647".nextval NOT NULL,
  "ANSWER_ID" NUMBER VISIBLE,
  "COMMENT_ID" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for ANSWER_REACT
-- ----------------------------
DROP TABLE "TOMMY"."ANSWER_REACT";
CREATE TABLE "TOMMY"."ANSWER_REACT" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_88623".nextval NOT NULL,
  "ANSWER_ID" NUMBER VISIBLE,
  "REACT" CHAR(1 BYTE) VISIBLE,
  "REACTED_BY" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for ARTICLE
-- ----------------------------
DROP TABLE "TOMMY"."ARTICLE";
CREATE TABLE "TOMMY"."ARTICLE" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_77887".nextval NOT NULL,
  "TITLE" VARCHAR2(1024 BYTE) VISIBLE NOT NULL,
  "CONTENT" VARCHAR2(2000 BYTE) VISIBLE NOT NULL,
  "CONTRIBUTED_BY" NUMBER VISIBLE,
  "CREATED_AT" TIMESTAMP(6) VISIBLE DEFAULT CURRENT_TIMESTAMP,
  "UPDATED_AT" TIMESTAMP(6) VISIBLE DEFAULT CURRENT_TIMESTAMP
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for ARTICLE_COMMENT
-- ----------------------------
DROP TABLE "TOMMY"."ARTICLE_COMMENT";
CREATE TABLE "TOMMY"."ARTICLE_COMMENT" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_88635".nextval NOT NULL,
  "ARTICLE_ID" NUMBER VISIBLE,
  "COMMENT_ID" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for ARTICLE_REACT
-- ----------------------------
DROP TABLE "TOMMY"."ARTICLE_REACT";
CREATE TABLE "TOMMY"."ARTICLE_REACT" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_88620".nextval NOT NULL,
  "ARTICLE_ID" NUMBER VISIBLE,
  "REACT" CHAR(1 BYTE) VISIBLE,
  "REACTED_BY" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for ARTICLE_TAG
-- ----------------------------
DROP TABLE "TOMMY"."ARTICLE_TAG";
CREATE TABLE "TOMMY"."ARTICLE_TAG" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_88632".nextval NOT NULL,
  "ARTICLE_ID" NUMBER VISIBLE,
  "TAG_ID" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for BADGE
-- ----------------------------
DROP TABLE "TOMMY"."BADGE";
CREATE TABLE "TOMMY"."BADGE" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_77863".nextval NOT NULL,
  "TITLE" VARCHAR2(64 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for COMMENTS
-- ----------------------------
DROP TABLE "TOMMY"."COMMENTS";
CREATE TABLE "TOMMY"."COMMENTS" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_77890".nextval NOT NULL,
  "TEXT" VARCHAR2(1024 BYTE) VISIBLE NOT NULL,
  "CONTRIBUTED_BY" NUMBER VISIBLE,
  "CREATED_AT" TIMESTAMP(6) VISIBLE DEFAULT CURRENT_TIMESTAMP,
  "UPDATED_AT" TIMESTAMP(6) VISIBLE DEFAULT CURRENT_TIMESTAMP
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for FOLLOW
-- ----------------------------
DROP TABLE "TOMMY"."FOLLOW";
CREATE TABLE "TOMMY"."FOLLOW" (
  "FOLLOWER" NUMBER VISIBLE NOT NULL,
  "FOLLOWING" NUMBER VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for NOTIFICATION
-- ----------------------------
DROP TABLE "TOMMY"."NOTIFICATION";
CREATE TABLE "TOMMY"."NOTIFICATION" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_91750".nextval NOT NULL,
  "PROFILE_ID" NUMBER VISIBLE NOT NULL,
  "LINK" VARCHAR2(100 BYTE) VISIBLE NOT NULL,
  "MESSAGE" VARCHAR2(512 BYTE) VISIBLE NOT NULL,
  "IS_READ" NUMBER(1,0) VISIBLE DEFAULT 0,
  "CREATED_AT" TIMESTAMP(6) VISIBLE DEFAULT CURRENT_TIMESTAMP,
  "UPDATED_AT" TIMESTAMP(6) VISIBLE DEFAULT CURRENT_TIMESTAMP
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for ORGANIZATION
-- ----------------------------
DROP TABLE "TOMMY"."ORGANIZATION";
CREATE TABLE "TOMMY"."ORGANIZATION" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_77875".nextval NOT NULL,
  "NAME" VARCHAR2(128 BYTE) VISIBLE NOT NULL,
  "ADDRESS" VARCHAR2(256 BYTE) VISIBLE,
  "PLAN" NUMBER VISIBLE,
  "DURATION" NUMBER VISIBLE DEFAULT 0,
  "ISACTIVE" CHAR(1 BYTE) VISIBLE DEFAULT 'n'
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for PLANNING
-- ----------------------------
DROP TABLE "TOMMY"."PLANNING";
CREATE TABLE "TOMMY"."PLANNING" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_77872".nextval NOT NULL,
  "TITLE" VARCHAR2(128 BYTE) VISIBLE NOT NULL,
  "AMOUNT" NUMBER VISIBLE DEFAULT 0
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for PROFILE
-- ----------------------------
DROP TABLE "TOMMY"."PROFILE";
CREATE TABLE "TOMMY"."PROFILE" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_77858".nextval NOT NULL,
  "USERNAME" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "FIRST_NAME" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "LAST_NAME" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "PASSWORD" VARCHAR2(128 BYTE) VISIBLE NOT NULL,
  "BIRTHDATE" DATE VISIBLE,
  "EMAIL" VARCHAR2(128 BYTE) VISIBLE,
  "PROFILE_PICTURE" VARCHAR2(512 BYTE) VISIBLE,
  "TITLE" VARCHAR2(128 BYTE) VISIBLE,
  "DESCRIPTION" VARCHAR2(512 BYTE) VISIBLE,
  "LAST_ACTIVE" TIMESTAMP(6) VISIBLE DEFAULT current_timestamp,
  "CREATED_AT" TIMESTAMP(6) VISIBLE DEFAULT current_timestamp,
  "REPUTATION" NUMBER VISIBLE DEFAULT 0
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for PROFILE_INTERESTED_IN
-- ----------------------------
DROP TABLE "TOMMY"."PROFILE_INTERESTED_IN";
CREATE TABLE "TOMMY"."PROFILE_INTERESTED_IN" (
  "PROFILE_ID" NUMBER VISIBLE NOT NULL,
  "TAG_ID" NUMBER VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for QUESTION
-- ----------------------------
DROP TABLE "TOMMY"."QUESTION";
CREATE TABLE "TOMMY"."QUESTION" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_77881".nextval NOT NULL,
  "TITLE" VARCHAR2(1024 BYTE) VISIBLE NOT NULL,
  "CONTENT" VARCHAR2(2000 BYTE) VISIBLE NOT NULL,
  "CONTRIBUTED_BY" NUMBER VISIBLE,
  "ORGANIZATION_ID" NUMBER VISIBLE,
  "CREATED_AT" TIMESTAMP(6) VISIBLE DEFAULT CURRENT_TIMESTAMP,
  "UPDATED_AT" TIMESTAMP(6) VISIBLE DEFAULT CURRENT_TIMESTAMP
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for QUESTION_COMMENT
-- ----------------------------
DROP TABLE "TOMMY"."QUESTION_COMMENT";
CREATE TABLE "TOMMY"."QUESTION_COMMENT" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_88644".nextval NOT NULL,
  "QUESTION_ID" NUMBER VISIBLE,
  "COMMENT_ID" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for QUESTION_REACT
-- ----------------------------
DROP TABLE "TOMMY"."QUESTION_REACT";
CREATE TABLE "TOMMY"."QUESTION_REACT" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_88626".nextval NOT NULL,
  "QUESTION_ID" NUMBER VISIBLE,
  "REACT" CHAR(1 BYTE) VISIBLE,
  "REACTED_BY" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for QUESTION_TAG
-- ----------------------------
DROP TABLE "TOMMY"."QUESTION_TAG";
CREATE TABLE "TOMMY"."QUESTION_TAG" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_88629".nextval NOT NULL,
  "QUESTION_ID" NUMBER VISIBLE,
  "TAG_ID" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for RESOURCES
-- ----------------------------
DROP TABLE "TOMMY"."RESOURCES";
CREATE TABLE "TOMMY"."RESOURCES" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_77855".nextval NOT NULL,
  "TYPE" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "URL" VARCHAR2(128 BYTE) VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for TAG
-- ----------------------------
DROP TABLE "TOMMY"."TAG";
CREATE TABLE "TOMMY"."TAG" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_87620".nextval NOT NULL,
  "TITLE" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "DESCRIPTION" VARCHAR2(500 BYTE) VISIBLE,
  "CREATED_AT" TIMESTAMP(6) VISIBLE DEFAULT CURRENT_TIMESTAMP,
  "UPDATED_AT" TIMESTAMP(6) VISIBLE DEFAULT CURRENT_TIMESTAMP,
  "SYNONYMS" VARCHAR2(256 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for USER_ORGANIZATION_RELATIONSHIP
-- ----------------------------
DROP TABLE "TOMMY"."USER_ORGANIZATION_RELATIONSHIP";
CREATE TABLE "TOMMY"."USER_ORGANIZATION_RELATIONSHIP" (
  "ID" NUMBER VISIBLE DEFAULT "TOMMY"."ISEQ$$_77878".nextval NOT NULL,
  "ORGANIZATION_ID" NUMBER VISIBLE,
  "USERNAME" VARCHAR2(64 BYTE) VISIBLE,
  "BADGE_ID" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Function structure for DEMO
-- ----------------------------
CREATE OR REPLACE
FUNCTION "TOMMY"."DEMO" AS
begin
	open rr for select id,title from question;
	return rr;
end;
/

-- ----------------------------
-- Function structure for INSERT_COMMENT
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "TOMMY"."INSERT_COMMENT" AS
BEGIN
TYPE_ := UPPER(TYPE);
    IF TYPE_ = 'QUESTION' OR TYPE_ = 'ANSWER' OR TYPE_='ARTICLE' THEN
        INSERT INTO COMMENTS (TEXT, CONTRIBUTED_BY ) VALUES (COMMENT, CONT_BY) RETURNING ID INTO COMMENT_ID;
DBMS_OUTPUT.PUT_LINE(COMMENT_ID);
        IF TYPE_ = 'QUESTION' THEN
            INSERT INTO QUESTION_COMMENT(QUESTION_ID, COMMENT_ID) VALUES (TYPED_ID, COMMENT_ID);
        ELSIF TYPE_ = 'ARTICLE' THEN
            INSERT INTO ARTICLE_COMMENT (ARTICLE_ID, COMMENT_ID) VALUES (TYPED_ID, COMMENT_ID);
        ELSIF TYPE_ = 'ANSWER' THEN
            INSERT INTO ANSWER_COMMENT (ANSWER_ID, COMMENT_ID) VALUES (TYPED_ID, COMMENT_ID);
        END IF;
    END IF;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('IDK');
END;
/

-- ----------------------------
-- Function structure for REACT
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "TOMMY"."REACT" AS
BEGIN
    IF TYPE = 'QUESTION' OR TYPE = 'ANSWER' OR TYPE='ARTICLE' OR TYPE='COMMENT'THEN
        IF TYPE = 'QUESTION' THEN
            INSERT INTO QUESTION_REACT (QUESTION_ID, REACT, REACTED_BY) VALUES (TYPED_ID, REACTION, REACTED_BY);
        ELSIF TYPE = 'ARTICLE' THEN
            INSERT INTO ARTICLE_REACT (ARTICLE_ID, REACT, REACTED_BY) VALUES (TYPED_ID, REACTION, REACTED_BY);
        ELSIF TYPE = 'ANSWER' THEN
            INSERT INTO ANSWER_REACT (ANSWER_ID, REACT, REACTED_BY) VALUES (TYPED_ID, REACTION, REACTED_BY);
        END IF;
    END IF;
END;
/

-- ----------------------------
-- Function structure for SEARCH_ARTICLE
-- ----------------------------
CREATE OR REPLACE
FUNCTION "TOMMY"."SEARCH_ARTICLE" AS
BEGIN
CONV_STRING := LOWER(REPLACE(SEARCH_STRING,' ', '.*'));
OPEN RESULT FOR
SELECT ID
FROM ARTICLE
WHERE (REGEXP_LIKE(LOWER(TITLE),CONV_STRING) OR REGEXP_LIKE(LOWER(CONTENT),CONV_STRING)) AND ROWNUM <= LIMIT;
RETURN RESULT;
END ;
/

-- ----------------------------
-- Function structure for SEARCH_PROFILE
-- ----------------------------
CREATE OR REPLACE
FUNCTION "TOMMY"."SEARCH_PROFILE" AS
BEGIN
CONV_STRING := LOWER(REPLACE(SEARCH_STRING,' ','.*'));
IF CONV_STRING IS NULL THEN
	CONV_STRING := '.*';
END IF;
OPEN RESULT FOR
SELECT ID,USERNAME
FROM PROFILE
WHERE (REGEXP_LIKE(LOWER(USERNAME),CONV_STRING) OR REGEXP_LIKE(LOWER(FIRST_NAME||LAST_NAME),CONV_STRING)) AND ROWNUM <= LIMIT ;
RETURN RESULT;
END;
/

-- ----------------------------
-- Function structure for SEARCH_QUESTION
-- ----------------------------
CREATE OR REPLACE
FUNCTION "TOMMY"."SEARCH_QUESTION" AS
BEGIN
CONV_STRING := LOWER(REPLACE(SEARCH_STRING,' ', '.*'));
OPEN RESULT FOR
SELECT ID
FROM QUESTION
WHERE REGEXP_LIKE(LOWER(TITLE),CONV_STRING) OR REGEXP_LIKE(LOWER(CONTENT),CONV_STRING);
RETURN RESULT;
END ;
/

-- ----------------------------
-- Function structure for SEARCH_TAG
-- ----------------------------
CREATE OR REPLACE
FUNCTION "TOMMY"."SEARCH_TAG" AS
BEGIN
CONV_STRING := LOWER(REPLACE(SEARCH_STRING,' ','.*'));
OPEN RESULT FOR
SELECT ID, TITLE
FROM TAG
WHERE (REGEXP_LIKE(LOWER(TITLE),CONV_STRING) OR REGEXP_LIKE(LOWER(TRANSLATE(SYNONYMS,',',' ')),CONV_STRING)) AND ROWNUM<=LIMIT ;
RETURN RESULT;
END ;
/

-- ----------------------------
-- Sequence structure for DEMO_SEQ
-- ----------------------------
DROP SEQUENCE "TOMMY"."DEMO_SEQ";
CREATE SEQUENCE "TOMMY"."DEMO_SEQ" MINVALUE 1 MAXVALUE 909990900909 INCREMENT BY 10 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77855
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_77855";
CREATE SEQUENCE "TOMMY"."ISEQ$$_77855" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77858
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_77858";
CREATE SEQUENCE "TOMMY"."ISEQ$$_77858" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77863
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_77863";
CREATE SEQUENCE "TOMMY"."ISEQ$$_77863" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77872
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_77872";
CREATE SEQUENCE "TOMMY"."ISEQ$$_77872" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77875
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_77875";
CREATE SEQUENCE "TOMMY"."ISEQ$$_77875" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77878
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_77878";
CREATE SEQUENCE "TOMMY"."ISEQ$$_77878" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77881
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_77881";
CREATE SEQUENCE "TOMMY"."ISEQ$$_77881" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77884
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_77884";
CREATE SEQUENCE "TOMMY"."ISEQ$$_77884" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77887
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_77887";
CREATE SEQUENCE "TOMMY"."ISEQ$$_77887" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77890
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_77890";
CREATE SEQUENCE "TOMMY"."ISEQ$$_77890" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77893
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_77893";
CREATE SEQUENCE "TOMMY"."ISEQ$$_77893" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77899
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_77899";
CREATE SEQUENCE "TOMMY"."ISEQ$$_77899" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77902
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_77902";
CREATE SEQUENCE "TOMMY"."ISEQ$$_77902" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77905
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_77905";
CREATE SEQUENCE "TOMMY"."ISEQ$$_77905" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77908
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_77908";
CREATE SEQUENCE "TOMMY"."ISEQ$$_77908" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77911
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_77911";
CREATE SEQUENCE "TOMMY"."ISEQ$$_77911" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77914
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_77914";
CREATE SEQUENCE "TOMMY"."ISEQ$$_77914" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78163
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78163";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78163" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78166
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78166";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78166" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78169
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78169";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78169" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78173
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78173";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78173" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78176
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78176";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78176" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78179
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78179";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78179" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78182
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78182";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78182" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78185
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78185";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78185" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78188
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78188";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78188" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78192
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78192";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78192" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78196
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78196";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78196" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78199
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78199";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78199" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78202
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78202";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78202" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78205
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78205";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78205" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78208
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78208";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78208" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78214
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78214";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78214" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78217
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78217";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78217" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78220
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78220";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78220" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78229
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78229";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78229" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78269
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78269";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78269" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78272
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78272";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78272" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78275
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78275";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78275" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78278
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78278";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78278" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78281
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78281";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78281" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78284
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78284";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78284" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78287
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78287";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78287" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78290
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78290";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78290" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_78293
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_78293";
CREATE SEQUENCE "TOMMY"."ISEQ$$_78293" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_87608
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_87608";
CREATE SEQUENCE "TOMMY"."ISEQ$$_87608" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_87620
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_87620";
CREATE SEQUENCE "TOMMY"."ISEQ$$_87620" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_88620
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_88620";
CREATE SEQUENCE "TOMMY"."ISEQ$$_88620" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_88623
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_88623";
CREATE SEQUENCE "TOMMY"."ISEQ$$_88623" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_88626
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_88626";
CREATE SEQUENCE "TOMMY"."ISEQ$$_88626" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_88629
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_88629";
CREATE SEQUENCE "TOMMY"."ISEQ$$_88629" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_88632
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_88632";
CREATE SEQUENCE "TOMMY"."ISEQ$$_88632" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_88635
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_88635";
CREATE SEQUENCE "TOMMY"."ISEQ$$_88635" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_88638
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_88638";
CREATE SEQUENCE "TOMMY"."ISEQ$$_88638" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_88641
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_88641";
CREATE SEQUENCE "TOMMY"."ISEQ$$_88641" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_88644
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_88644";
CREATE SEQUENCE "TOMMY"."ISEQ$$_88644" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_88647
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_88647";
CREATE SEQUENCE "TOMMY"."ISEQ$$_88647" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_91747
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_91747";
CREATE SEQUENCE "TOMMY"."ISEQ$$_91747" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_91750
-- ----------------------------
DROP SEQUENCE "TOMMY"."ISEQ$$_91750";
CREATE SEQUENCE "TOMMY"."ISEQ$$_91750" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Primary Key structure for table ANSWER
-- ----------------------------
ALTER TABLE "TOMMY"."ANSWER" ADD CONSTRAINT "SYS_C0011019" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table ANSWER
-- ----------------------------
ALTER TABLE "TOMMY"."ANSWER" ADD CONSTRAINT "SYS_C0011016" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."ANSWER" ADD CONSTRAINT "SYS_C0011018" CHECK ("ANSWER" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table ANSWER
-- ----------------------------
CREATE TRIGGER "TOMMY"."ON_ANSWER_NOTIFICATION" AFTER INSERT ON "TOMMY"."ANSWER" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
    NREPUTATION NUMBER;
    N_AUTHOR NUMBER;
BEGIN
    SELECT
        CONTRIBUTED_BY INTO N_AUTHOR
    FROM
        QUESTION
    WHERE
        QUESTION.ID = :NEW.QUESTION_ID;

    NREPUTATION:=1;

    UPDATE
        PROFILE
    SET
        REPUTATION = REPUTATION + NREPUTATION
    WHERE
        PROFILE.ID = :NEW.CONTRIBUTED_BY;

    -- adding notification TO THE AUTHOR

    INSERT INTO NOTIFICATION (
        PROFILE_ID,
        LINK,
        MESSAGE
    )
    VALUES (
        N_AUTHOR,
        '/QUESTION/' || :NEW.ID,
        (SELECT USERNAME FROM PROFILE WHERE ID = :NEW.CONTRIBUTED_BY) ||' answered a question to your question'
    );

END;
/
CREATE TRIGGER "TOMMY"."ON_UPDATE_ANSWER" BEFORE UPDATE ON "TOMMY"."ANSWER" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
BEGIN
    :NEW.UPDATED_AT := CURRENT_TIMESTAMP;
END;
/

-- ----------------------------
-- Primary Key structure for table ANSWER_COMMENT
-- ----------------------------
ALTER TABLE "TOMMY"."ANSWER_COMMENT" ADD CONSTRAINT "SYS_C0020987" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table ANSWER_COMMENT
-- ----------------------------
ALTER TABLE "TOMMY"."ANSWER_COMMENT" ADD CONSTRAINT "SYS_C0020986" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table ANSWER_REACT
-- ----------------------------
ALTER TABLE "TOMMY"."ANSWER_REACT" ADD CONSTRAINT "SYS_C0020955" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table ANSWER_REACT
-- ----------------------------
ALTER TABLE "TOMMY"."ANSWER_REACT" ADD CONSTRAINT "SYS_C0020954" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table ANSWER_REACT
-- ----------------------------
CREATE TRIGGER "TOMMY"."ON_ANSWER_REACTION_NOTIFICATION" BEFORE INSERT ON "TOMMY"."ANSWER_REACT" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
    NREPUTATION NUMBER;
    N_PROFILE_ID NUMBER;
BEGIN
    NREPUTATION:=0;
    :NEW.REACT:= UPPER(:NEW.REACT);
    IF :NEW.REACT = 'Y' THEN
        NREPUTATION := 1;
    ELSIF :NEW.REACT = 'N' THEN
        NREPUTATION := -1;
    END IF;

    SELECT
           CONTRIBUTED_BY INTO N_PROFILE_ID
       FROM
           ANSWER
       WHERE
           ANSWER.ID = :NEW.ANSWER_ID;
    IF N_PROFILE_ID <> :NEW.REACTED_BY THEN
        UPDATE
            PROFILE
        SET
            REPUTATION = REPUTATION + NREPUTATION
        WHERE
            PROFILE.ID = N_PROFILE_ID;

        -- adding notification

        INSERT INTO NOTIFICATION (
            PROFILE_ID,
            LINK,
            MESSAGE
        )
        VALUES (
            N_PROFILE_ID,
            '/answer/' || :NEW.ANSWER_ID,
            (SELECT USERNAME FROM PROFILE WHERE ID = :NEW.REACTED_BY) ||' reacted your answer'
        );
    END IF;
    -- updating reputation
END;
/
CREATE TRIGGER "TOMMY"."ON_UPDATE_ANSWER_REACTION_NOTIFICATION" BEFORE UPDATE OF "REACT" ON "TOMMY"."ANSWER_REACT" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
    NREPUTATION NUMBER;
    N_PROFILE_ID ANSWER_REACT.ID%TYPE;
BEGIN
 NREPUTATION:=0;
    :NEW.REACT:= UPPER(:NEW.REACT);
    IF :NEW.REACT = 'Y' THEN
        NREPUTATION := 1;
    ELSIF :NEW.REACT = 'N' THEN
        NREPUTATION := -1;
    END IF;

    SELECT
           CONTRIBUTED_BY INTO N_PROFILE_ID
       FROM
           ANSWER
       WHERE
           ANSWER.ID = :NEW.ANSWER_ID;
    IF INITCAP(:NEW.REACT) <> INITCAP(:OLD.REACT) AND N_PROFILE_ID <> :NEW.REACTED_BY THEN
        UPDATE
            PROFILE
        SET
            REPUTATION = REPUTATION + NREPUTATION
        WHERE
            PROFILE.ID = N_PROFILE_ID;

        INSERT INTO NOTIFICATION (
            PROFILE_ID,
            LINK,
            MESSAGE
        )
        VALUES (
            N_PROFILE_ID,
            '/question/' || :NEW.ANSWER_ID,
            (SELECT USERNAME FROM PROFILE WHERE ID = :NEW.REACTED_BY) ||' reacted your ANSWER'
        );
    END IF;
END;
/

-- ----------------------------
-- Primary Key structure for table ARTICLE
-- ----------------------------
ALTER TABLE "TOMMY"."ARTICLE" ADD CONSTRAINT "SYS_C0011025" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table ARTICLE
-- ----------------------------
ALTER TABLE "TOMMY"."ARTICLE" ADD CONSTRAINT "SYS_C0011022" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."ARTICLE" ADD CONSTRAINT "SYS_C0011023" CHECK ("TITLE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."ARTICLE" ADD CONSTRAINT "SYS_C0011024" CHECK ("CONTENT" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table ARTICLE
-- ----------------------------
CREATE TRIGGER "TOMMY"."ON_UPDATE_ARTICLE" BEFORE UPDATE ON "TOMMY"."ARTICLE" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
BEGIN
    :NEW.UPDATED_AT := CURRENT_TIMESTAMP;
END;
/

-- ----------------------------
-- Primary Key structure for table ARTICLE_COMMENT
-- ----------------------------
ALTER TABLE "TOMMY"."ARTICLE_COMMENT" ADD CONSTRAINT "SYS_C0020971" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table ARTICLE_COMMENT
-- ----------------------------
ALTER TABLE "TOMMY"."ARTICLE_COMMENT" ADD CONSTRAINT "SYS_C0020970" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table ARTICLE_REACT
-- ----------------------------
ALTER TABLE "TOMMY"."ARTICLE_REACT" ADD CONSTRAINT "SYS_C0020951" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table ARTICLE_REACT
-- ----------------------------
ALTER TABLE "TOMMY"."ARTICLE_REACT" ADD CONSTRAINT "SYS_C0020950" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table ARTICLE_REACT
-- ----------------------------
CREATE TRIGGER "TOMMY"."ON_ARTICLE_REACTION_NOTIFICATION" BEFORE INSERT ON "TOMMY"."ARTICLE_REACT" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
    NREPUTATION NUMBER;
    N_PROFILE_ID ARTICLE_REACT.ID%TYPE;
BEGIN
    NREPUTATION:=0;
    :NEW.REACT:= UPPER(:NEW.REACT);
    IF :NEW.REACT = 'Y' THEN
        NREPUTATION := 1;
    ELSIF :NEW.REACT = 'N' THEN
        NREPUTATION := -1;
    END IF;

    SELECT
           CONTRIBUTED_BY INTO N_PROFILE_ID
       FROM
           ARTICLE
       WHERE
           ARTICLE.ID = :NEW.ARTICLE_ID;

    -- updating reputation

    -- UPDATE
    --     PROFILE
    -- SET
    --     REPUTATION = REPUTATION + NREPUTATION
    -- WHERE
    --     PROFILE.ID = N_PROFILE_ID;

    -- adding notification
    IF N_PROFILE_ID <> :NEW.REACTED_BY THEN
        INSERT INTO NOTIFICATION (
            PROFILE_ID,
            LINK,
            MESSAGE
        )
        VALUES (
            N_PROFILE_ID,
            '/article/' || :NEW.ARTICLE_ID,
            (SELECT USERNAME FROM PROFILE WHERE ID = :NEW.REACTED_BY) ||' reacted your article'
        );
    END IF;
END;
/

-- ----------------------------
-- Primary Key structure for table ARTICLE_TAG
-- ----------------------------
ALTER TABLE "TOMMY"."ARTICLE_TAG" ADD CONSTRAINT "SYS_C0020967" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table ARTICLE_TAG
-- ----------------------------
ALTER TABLE "TOMMY"."ARTICLE_TAG" ADD CONSTRAINT "SYS_C0020966" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table BADGE
-- ----------------------------
ALTER TABLE "TOMMY"."BADGE" ADD CONSTRAINT "SYS_C0010991" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table BADGE
-- ----------------------------
ALTER TABLE "TOMMY"."BADGE" ADD CONSTRAINT "SYS_C0010990" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table COMMENTS
-- ----------------------------
ALTER TABLE "TOMMY"."COMMENTS" ADD CONSTRAINT "SYS_C0011029" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table COMMENTS
-- ----------------------------
ALTER TABLE "TOMMY"."COMMENTS" ADD CONSTRAINT "SYS_C0011027" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."COMMENTS" ADD CONSTRAINT "SYS_C0011028" CHECK ("TEXT" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table COMMENTS
-- ----------------------------
CREATE TRIGGER "TOMMY"."ON_UPDATE_COMMENT" BEFORE UPDATE ON "TOMMY"."COMMENTS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
BEGIN
    :NEW.UPDATED_AT := CURRENT_TIMESTAMP;
END;
/

-- ----------------------------
-- Primary Key structure for table FOLLOW
-- ----------------------------
ALTER TABLE "TOMMY"."FOLLOW" ADD CONSTRAINT "FOLLOW_PK" PRIMARY KEY ("FOLLOWER", "FOLLOWING");

-- ----------------------------
-- Checks structure for table FOLLOW
-- ----------------------------
ALTER TABLE "TOMMY"."FOLLOW" ADD CONSTRAINT "FOLLOW_SELF" CHECK ( FOLLOWER <> FOLLOWING) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."FOLLOW" ADD CONSTRAINT "SYS_C0020944" CHECK ("FOLLOWER" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."FOLLOW" ADD CONSTRAINT "SYS_C0020945" CHECK ("FOLLOWING" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table NOTIFICATION
-- ----------------------------
ALTER TABLE "TOMMY"."NOTIFICATION" ADD CONSTRAINT "PK_NOTIFICATION" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table NOTIFICATION
-- ----------------------------
ALTER TABLE "TOMMY"."NOTIFICATION" ADD CONSTRAINT "SYS_C0023339" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."NOTIFICATION" ADD CONSTRAINT "SYS_C0023340" CHECK ("PROFILE_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."NOTIFICATION" ADD CONSTRAINT "SYS_C0023341" CHECK ("LINK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."NOTIFICATION" ADD CONSTRAINT "SYS_C0023342" CHECK ("MESSAGE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table NOTIFICATION
-- ----------------------------
CREATE TRIGGER "TOMMY"."ON_UPDATE_NOTIFICATION" BEFORE UPDATE ON "TOMMY"."NOTIFICATION" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
BEGIN
    :NEW.UPDATED_AT := CURRENT_TIMESTAMP;
END;
/

-- ----------------------------
-- Primary Key structure for table ORGANIZATION
-- ----------------------------
ALTER TABLE "TOMMY"."ORGANIZATION" ADD CONSTRAINT "SYS_C0011003" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table ORGANIZATION
-- ----------------------------
ALTER TABLE "TOMMY"."ORGANIZATION" ADD CONSTRAINT "SYS_C0011001" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."ORGANIZATION" ADD CONSTRAINT "SYS_C0011002" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table PLANNING
-- ----------------------------
ALTER TABLE "TOMMY"."PLANNING" ADD CONSTRAINT "SYS_C0011000" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table PLANNING
-- ----------------------------
ALTER TABLE "TOMMY"."PLANNING" ADD CONSTRAINT "SYS_C0010998" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."PLANNING" ADD CONSTRAINT "SYS_C0010999" CHECK ("TITLE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table PROFILE
-- ----------------------------
ALTER TABLE "TOMMY"."PROFILE" ADD CONSTRAINT "SYS_C0010987" PRIMARY KEY ("ID");

-- ----------------------------
-- Uniques structure for table PROFILE
-- ----------------------------
ALTER TABLE "TOMMY"."PROFILE" ADD CONSTRAINT "SYS_C0010988" UNIQUE ("USERNAME") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table PROFILE
-- ----------------------------
ALTER TABLE "TOMMY"."PROFILE" ADD CONSTRAINT "SYS_C0010982" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."PROFILE" ADD CONSTRAINT "SYS_C0010983" CHECK ("USERNAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."PROFILE" ADD CONSTRAINT "SYS_C0010984" CHECK ("FIRST_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."PROFILE" ADD CONSTRAINT "SYS_C0010985" CHECK ("LAST_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."PROFILE" ADD CONSTRAINT "SYS_C0010986" CHECK ("PASSWORD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table PROFILE_INTERESTED_IN
-- ----------------------------
ALTER TABLE "TOMMY"."PROFILE_INTERESTED_IN" ADD CONSTRAINT "PROFILE_INTERESTED_IN_PK" PRIMARY KEY ("PROFILE_ID", "TAG_ID");

-- ----------------------------
-- Checks structure for table PROFILE_INTERESTED_IN
-- ----------------------------
ALTER TABLE "TOMMY"."PROFILE_INTERESTED_IN" ADD CONSTRAINT "SYS_C0019641" CHECK ("PROFILE_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."PROFILE_INTERESTED_IN" ADD CONSTRAINT "SYS_C0019642" CHECK ("TAG_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table QUESTION
-- ----------------------------
ALTER TABLE "TOMMY"."QUESTION" ADD CONSTRAINT "SYS_C0011013" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table QUESTION
-- ----------------------------
ALTER TABLE "TOMMY"."QUESTION" ADD CONSTRAINT "SYS_C0011010" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."QUESTION" ADD CONSTRAINT "SYS_C0011011" CHECK ("TITLE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."QUESTION" ADD CONSTRAINT "SYS_C0011012" CHECK ("CONTENT" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table QUESTION
-- ----------------------------
CREATE TRIGGER "TOMMY"."ON_QUESTION_NOTIFICATION" BEFORE INSERT ON "TOMMY"."QUESTION" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
    N_PROFILE_ID NUMBER;
BEGIN
    N_PROFILE_ID:= :NEW.CONTRIBUTED_BY;
    UPDATE
        PROFILE
    SET
        REPUTATION = REPUTATION + 1
    WHERE
        PROFILE.ID = N_PROFILE_ID;

    -- adding notification TO FOLLOWERS OF THE AUTHOR
    FOR R IN (SELECT FOLLOWER FROM FOLLOW WHERE FOLLOWING = :NEW.CONTRIBUTED_BY )
    LOOP
        INSERT INTO NOTIFICATION (
            PROFILE_ID,
            LINK,
            MESSAGE
        )
        VALUES (
            R.FOLLOWER,
            '/question/' || :NEW.ID,
            (SELECT USERNAME FROM PROFILE WHERE ID = :NEW.CONTRIBUTED_BY) ||' asked a new question. Help him FFS!'
        );
    END LOOP;

END;
/
CREATE TRIGGER "TOMMY"."ON_UPDATE_QUESTION" BEFORE UPDATE ON "TOMMY"."QUESTION" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
BEGIN
    :NEW.UPDATED_AT := CURRENT_TIMESTAMP;
END;
/

-- ----------------------------
-- Primary Key structure for table QUESTION_COMMENT
-- ----------------------------
ALTER TABLE "TOMMY"."QUESTION_COMMENT" ADD CONSTRAINT "SYS_C0020983" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table QUESTION_COMMENT
-- ----------------------------
ALTER TABLE "TOMMY"."QUESTION_COMMENT" ADD CONSTRAINT "SYS_C0020982" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table QUESTION_REACT
-- ----------------------------
ALTER TABLE "TOMMY"."QUESTION_REACT" ADD CONSTRAINT "SYS_C0020959" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table QUESTION_REACT
-- ----------------------------
ALTER TABLE "TOMMY"."QUESTION_REACT" ADD CONSTRAINT "SYS_C0020958" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table QUESTION_REACT
-- ----------------------------
CREATE TRIGGER "TOMMY"."ON_QUESTION_REACTION_NOTIFICATION" BEFORE INSERT ON "TOMMY"."QUESTION_REACT" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
    NREPUTATION NUMBER;
    N_PROFILE_ID QUESTION_REACT.ID%TYPE;
BEGIN
    NREPUTATION:=0;
    :NEW.REACT:= UPPER(:NEW.REACT);
    IF :NEW.REACT = 'Y' THEN
        NREPUTATION := 1;
    ELSIF :NEW.REACT = 'N' THEN
        NREPUTATION := -1;
    END IF;

    SELECT
           CONTRIBUTED_BY INTO N_PROFILE_ID
       FROM
           QUESTION
       WHERE
           QUESTION.ID = :NEW.QUESTION_ID;

    -- updating reputation
    IF N_PROFILE_ID <> :NEW.REACTED_BY THEN
        UPDATE
            PROFILE
        SET
            REPUTATION = REPUTATION + NREPUTATION
        WHERE
            PROFILE.ID = N_PROFILE_ID;

        -- adding notification

        INSERT INTO NOTIFICATION (
            PROFILE_ID,
            LINK,
            MESSAGE
        )
        VALUES (
            N_PROFILE_ID,
            '/question/' || :NEW.QUESTION_ID,
            (SELECT USERNAME FROM PROFILE WHERE ID = :NEW.REACTED_BY) ||' reacted your question'
        );
    END IF;
END;
/
CREATE TRIGGER "TOMMY"."ON_UPDATE_QUESTION_REACTION_NOTIFICATION" BEFORE UPDATE OF "REACT" ON "TOMMY"."QUESTION_REACT" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
    NREPUTATION NUMBER;
    N_PROFILE_ID QUESTION_REACT.ID%TYPE;
BEGIN
    NREPUTATION:=0;

    :NEW.REACT:= UPPER(:NEW.REACT);
    IF :NEW.REACT = 'Y' THEN
        NREPUTATION := 1;
    ELSIF :NEW.REACT = 'N' THEN
        NREPUTATION := -1;
    END IF;

    SELECT
           CONTRIBUTED_BY INTO N_PROFILE_ID
       FROM
           QUESTION
       WHERE
           QUESTION.ID = :NEW.QUESTION_ID;
    IF INITCAP(:NEW.REACT) <> INITCAP(:OLD.REACT) AND N_PROFILE_ID <> :NEW.REACTED_BY THEN
        UPDATE
            PROFILE
        SET
            REPUTATION = REPUTATION + NREPUTATION
        WHERE
            PROFILE.ID = N_PROFILE_ID;

        INSERT INTO NOTIFICATION (
            PROFILE_ID,
            LINK,
            MESSAGE
        )
        VALUES (
            N_PROFILE_ID,
            '/question/' || :NEW.QUESTION_ID,
            (SELECT USERNAME FROM PROFILE WHERE ID = :NEW.REACTED_BY) ||' reacted your question'
        );
    END IF;
END;
/

-- ----------------------------
-- Primary Key structure for table QUESTION_TAG
-- ----------------------------
ALTER TABLE "TOMMY"."QUESTION_TAG" ADD CONSTRAINT "SYS_C0020963" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table QUESTION_TAG
-- ----------------------------
ALTER TABLE "TOMMY"."QUESTION_TAG" ADD CONSTRAINT "SYS_C0020962" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table RESOURCES
-- ----------------------------
ALTER TABLE "TOMMY"."RESOURCES" ADD CONSTRAINT "SYS_C0010981" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table RESOURCES
-- ----------------------------
ALTER TABLE "TOMMY"."RESOURCES" ADD CONSTRAINT "SYS_C0010978" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."RESOURCES" ADD CONSTRAINT "SYS_C0010979" CHECK ("TYPE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."RESOURCES" ADD CONSTRAINT "SYS_C0010980" CHECK ("URL" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table TAG
-- ----------------------------
ALTER TABLE "TOMMY"."TAG" ADD CONSTRAINT "TAG_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Uniques structure for table TAG
-- ----------------------------
ALTER TABLE "TOMMY"."TAG" ADD CONSTRAINT "SYS_C0019624" UNIQUE ("TITLE") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table TAG
-- ----------------------------
ALTER TABLE "TOMMY"."TAG" ADD CONSTRAINT "SYS_C0019621" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."TAG" ADD CONSTRAINT "SYS_C0019622" CHECK ("TITLE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table TAG
-- ----------------------------
CREATE TRIGGER "TOMMY"."FORMAT_TAG_TITLE" BEFORE INSERT OR UPDATE ON "TOMMY"."TAG" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
BEGIN
  :NEW.TITLE := LOWER(TRANSLATE(:NEW.TITLE,' ','-'));
  :NEW.UPDATED_AT := CURRENT_TIMESTAMP;
END ;
/
CREATE TRIGGER "TOMMY"."ON_UPDATE_TAG" BEFORE UPDATE ON "TOMMY"."TAG" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
BEGIN
    :NEW.UPDATED_AT := CURRENT_TIMESTAMP;
END;
/

-- ----------------------------
-- Primary Key structure for table USER_ORGANIZATION_RELATIONSHIP
-- ----------------------------
ALTER TABLE "TOMMY"."USER_ORGANIZATION_RELATIONSHIP" ADD CONSTRAINT "SYS_C0011006" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table USER_ORGANIZATION_RELATIONSHIP
-- ----------------------------
ALTER TABLE "TOMMY"."USER_ORGANIZATION_RELATIONSHIP" ADD CONSTRAINT "SYS_C0011005" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ANSWER
-- ----------------------------
ALTER TABLE "TOMMY"."ANSWER" ADD CONSTRAINT "ANSWER_FK" FOREIGN KEY ("CONTRIBUTED_BY") REFERENCES "TOMMY"."PROFILE" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."ANSWER" ADD CONSTRAINT "ANSWER_FK_1" FOREIGN KEY ("QUESTION_ID") REFERENCES "TOMMY"."QUESTION" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ANSWER_COMMENT
-- ----------------------------
ALTER TABLE "TOMMY"."ANSWER_COMMENT" ADD CONSTRAINT "ANSWER_COMMENT_FK" FOREIGN KEY ("ANSWER_ID") REFERENCES "TOMMY"."ANSWER" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."ANSWER_COMMENT" ADD CONSTRAINT "ANSWER_COMMENT_FK_1" FOREIGN KEY ("COMMENT_ID") REFERENCES "TOMMY"."COMMENTS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ANSWER_REACT
-- ----------------------------
ALTER TABLE "TOMMY"."ANSWER_REACT" ADD CONSTRAINT "ANSWER_REACT_FK" FOREIGN KEY ("ANSWER_ID") REFERENCES "TOMMY"."ANSWER" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."ANSWER_REACT" ADD CONSTRAINT "ANSWER_REACT_FK_1" FOREIGN KEY ("REACTED_BY") REFERENCES "TOMMY"."PROFILE" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ARTICLE
-- ----------------------------
ALTER TABLE "TOMMY"."ARTICLE" ADD CONSTRAINT "ARTICLE_FK" FOREIGN KEY ("CONTRIBUTED_BY") REFERENCES "TOMMY"."PROFILE" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ARTICLE_COMMENT
-- ----------------------------
ALTER TABLE "TOMMY"."ARTICLE_COMMENT" ADD CONSTRAINT "ARTICLE_COMMENT_FK" FOREIGN KEY ("ARTICLE_ID") REFERENCES "TOMMY"."ARTICLE" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."ARTICLE_COMMENT" ADD CONSTRAINT "ARTICLE_COMMENT_FK_1" FOREIGN KEY ("COMMENT_ID") REFERENCES "TOMMY"."COMMENTS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ARTICLE_REACT
-- ----------------------------
ALTER TABLE "TOMMY"."ARTICLE_REACT" ADD CONSTRAINT "ARTICLE_REACT_FK" FOREIGN KEY ("ARTICLE_ID") REFERENCES "TOMMY"."ARTICLE" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."ARTICLE_REACT" ADD CONSTRAINT "ARTICLE_REACT_FK_1" FOREIGN KEY ("REACTED_BY") REFERENCES "TOMMY"."PROFILE" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ARTICLE_TAG
-- ----------------------------
ALTER TABLE "TOMMY"."ARTICLE_TAG" ADD CONSTRAINT "ARTICLE_TAG_FK" FOREIGN KEY ("ARTICLE_ID") REFERENCES "TOMMY"."ARTICLE" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."ARTICLE_TAG" ADD CONSTRAINT "ARTICLE_TAG_FK_1" FOREIGN KEY ("TAG_ID") REFERENCES "TOMMY"."TAG" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table COMMENTS
-- ----------------------------
ALTER TABLE "TOMMY"."COMMENTS" ADD CONSTRAINT "COMMENTS_FK" FOREIGN KEY ("CONTRIBUTED_BY") REFERENCES "TOMMY"."PROFILE" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table FOLLOW
-- ----------------------------
ALTER TABLE "TOMMY"."FOLLOW" ADD CONSTRAINT "FOLLOWER_FK" FOREIGN KEY ("FOLLOWER") REFERENCES "TOMMY"."PROFILE" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."FOLLOW" ADD CONSTRAINT "FOLLOWING_FK" FOREIGN KEY ("FOLLOWING") REFERENCES "TOMMY"."PROFILE" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table NOTIFICATION
-- ----------------------------
ALTER TABLE "TOMMY"."NOTIFICATION" ADD CONSTRAINT "FK_NOTIFICATION" FOREIGN KEY ("PROFILE_ID") REFERENCES "TOMMY"."PROFILE" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ORGANIZATION
-- ----------------------------
ALTER TABLE "TOMMY"."ORGANIZATION" ADD CONSTRAINT "ORGANIZATION_FK" FOREIGN KEY ("PLAN") REFERENCES "TOMMY"."PLANNING" ("ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table PROFILE_INTERESTED_IN
-- ----------------------------
ALTER TABLE "TOMMY"."PROFILE_INTERESTED_IN" ADD CONSTRAINT "PROFILE_INTERESTED_IN_FK" FOREIGN KEY ("TAG_ID") REFERENCES "TOMMY"."TAG" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."PROFILE_INTERESTED_IN" ADD CONSTRAINT "PROFILE_INTERESTED_IN_FK_1" FOREIGN KEY ("PROFILE_ID") REFERENCES "TOMMY"."PROFILE" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table QUESTION
-- ----------------------------
ALTER TABLE "TOMMY"."QUESTION" ADD CONSTRAINT "QUESTION_FK" FOREIGN KEY ("CONTRIBUTED_BY") REFERENCES "TOMMY"."PROFILE" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."QUESTION" ADD CONSTRAINT "QUESTION_FK_1" FOREIGN KEY ("ORGANIZATION_ID") REFERENCES "TOMMY"."ORGANIZATION" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table QUESTION_COMMENT
-- ----------------------------
ALTER TABLE "TOMMY"."QUESTION_COMMENT" ADD CONSTRAINT "QUESTION_COMMENT_FK" FOREIGN KEY ("QUESTION_ID") REFERENCES "TOMMY"."QUESTION" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."QUESTION_COMMENT" ADD CONSTRAINT "QUESTION_COMMENT_FK_1" FOREIGN KEY ("COMMENT_ID") REFERENCES "TOMMY"."COMMENTS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table QUESTION_REACT
-- ----------------------------
ALTER TABLE "TOMMY"."QUESTION_REACT" ADD CONSTRAINT "QUESTION_REACT_FK" FOREIGN KEY ("QUESTION_ID") REFERENCES "TOMMY"."QUESTION" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."QUESTION_REACT" ADD CONSTRAINT "QUESTION_REACT_FK_1" FOREIGN KEY ("REACTED_BY") REFERENCES "TOMMY"."PROFILE" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table QUESTION_TAG
-- ----------------------------
ALTER TABLE "TOMMY"."QUESTION_TAG" ADD CONSTRAINT "QUESTION_TAG_FK" FOREIGN KEY ("QUESTION_ID") REFERENCES "TOMMY"."QUESTION" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."QUESTION_TAG" ADD CONSTRAINT "QUESTION_TAG_FK_1" FOREIGN KEY ("TAG_ID") REFERENCES "TOMMY"."TAG" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table USER_ORGANIZATION_RELATIONSHIP
-- ----------------------------
ALTER TABLE "TOMMY"."USER_ORGANIZATION_RELATIONSHIP" ADD CONSTRAINT "USER_ORG_FK" FOREIGN KEY ("ORGANIZATION_ID") REFERENCES "TOMMY"."ORGANIZATION" ("ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."USER_ORGANIZATION_RELATIONSHIP" ADD CONSTRAINT "USER_ORG_FK_1" FOREIGN KEY ("USERNAME") REFERENCES "TOMMY"."PROFILE" ("USERNAME") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TOMMY"."USER_ORGANIZATION_RELATIONSHIP" ADD CONSTRAINT "USER_ORG_FK_2" FOREIGN KEY ("BADGE_ID") REFERENCES "TOMMY"."BADGE" ("ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
